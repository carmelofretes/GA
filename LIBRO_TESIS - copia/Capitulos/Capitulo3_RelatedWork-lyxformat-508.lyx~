#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
RELATED WORK 
\end_layout

\begin_layout Standard
As the RSA is considered a NP-Complete problem [14], it has been treated
 with several techniques, exact and heuristic, both for dynamic traffic
 and for static traffic.
 Among the exact techniques are the ILP, while among the heuristics are
 optimizations with Colony of Bees (BCO, Bee Colony Optimization) [18],
 Genetic Algorithms (GA, Genetic Algorithm) [19] [20] [21], among others
 [22] [23].
 Different ILP models for small instances and different heuristics for more
 real scenarios have been used successfully to solve the RSA problem.
 As an example we can mention in [24] an ILP model was proposed to minimize
 the use of the spectrum to serve a traffic matrix in an EON.
 The authors propose a method that divides the problem into two sub-problems,
 the first is the routing and the second is the spectrum assignment and
 solves them sequentially, using a route-based approach.
 They also propose a heuristic algorithm that serves the connections one
 by one sequentially.
 Then in [3], the authors extend their previous results including consideration
 of modulation level.
 With this new consideration, a new problem was defined routing, modulation
 level and spectrum assignment (RMLSA), being outside the scope of this
 work.
 Other problems such as Fragmentation Aware and Dynamic Traffic are also
 not considered.
 Another ILP formulation and the proof that the RSA problem is a NP-complete
 problem can be found in [14].
 In [25], the differences between an ILP for RWA and for RSA are exposed,
 as well as an algorithm complexity analysis.
 In the same work two RSA algorithms are exposed.
 These have a better performance than the ILP in larger networks.
 With these two heuristic algorithms, the computational time was reduced,
 which is considered an improvement compared with the ILP, with which it
 differentiates in computation hours.
 The work proposed in [16], presents the multi-objective RSA problem and
 its associated algorithm model.
 Each request has many possible routes, and in each routing it has several
 spectrum assignment options.
 The problem is to minimize the spectrum width to support all requests and
 minimize the overall cost of the spectrum in the link.
 The objective function for the work proposed in [16] is as following: there
 are two objectives associated with each solution.
 The first objective f1, is the width of the spectrum that indicates the
 maximum indexed slice used in the network.
 The second objective f2 is the total cost of the spectrum link.
 Given a set of requests, the route and channel are calculated for each
 one.
 After attending each demand sequentially and without any sort of ordering,
 the spectrum availabilities vector of each link is updated.
 In this work it is developed a pure multi-objective approach to calculate
 a Pareto front.
 This approach is an extension of the work presented in [10] which has an
 approach based on weighted sum.
 In our work, as in [16] it has many possible routes, and in each routing
 it has several spectrum assignment options.
 The problem is to minimize the spectrum used and the overall cost of the
 link spectrum at the same time.
 The same objective function is taken from [16] and the requests are handled
 as follows: applications are ordered from highest to lowest, defined by
 the highest possible cost of said request, the first 30% of said list is
 attended in the first place, while the remaining 70% is treated in a random
 manner, unlike [16] it is a random ordering.
 More details are given in section 7.
 
\end_layout

\end_body
\end_document
